{"version":3,"sources":["components/recharts/recharts.js","components/recharts/index.js","pages/chartpage.js","reducers/reducer.js","service/service.js","components/generate-tasks/generate-tasks.js","components/table/table.js","components/table/index.js","pages/homepage.js","components/task-details/index.js","components/task-details/task-details.js","pages/detailtaskpage.js","components/tabs/index.js","components/tabs/tabs.js","components/modal/index.js","components/modal/modal.js","components/timer/timer.js","components/timer/index.js","components/app/index.js","components/app/app.js","store.js","index.js"],"names":["Recharts","state","data","changeData","i","id","min","setState","convertTimeInMinutes","h","m","s","parseInt","convertData","tasks","props","tasksFilters","filter","item","statusTask","tasksFilter","cloneDeep","length","undefined","timeStart","dataTimeSplit","split","idDataStartTime","timeSpendOnTask","timeSpend","timeSpendOnMinutes","amountForFullMinutes","this","prevProps","prevState","newData","style","maxWidth","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","name","fill","Component","Rechars","connect","chartPage","service","getTasks","JSON","parse","localStorage","getItem","addItem","payload","push","setItem","stringify","deleteItem","taskName","addProgressTask","generateTask","idTask","tasksSlice","createSlice","initialState","statusModal","taskItem","reducers","reducer","action","prepare","info","ind","findIndex","splice","showModal","generateTasks","getTask","filterTask","actions","deleteItemThunk","dispatch","generateTaskThunk","addProgressTaskThunk","addItemThunk","createRandomNmbr","max","rand","Math","random","round","convertorTime","minutes","bindActionCreators","className","onClick","countNumber","createTask","useStyles","makeStyles","table","width","tbody","background","topCell","color","td","button","backgroundColor","Table","deteleItemThunks","classes","TableContainer","align","aria-label","TableHead","TableRow","TableCell","TableBody","map","key","component","scope","timeEnd","to","taskId","Button","variant","homePage","TaskDetails","TaskDetailPage","MyTabs","exact","activeClassName","Modal","Timer","timerId","flag","hidden","sec","taskText","timerBtn","textTransform","changeShowBtn","onTimerWrap","Date","toString","startTimer","setInterval","seconds","stopTimer","event","stopPropagation","preventDefault","clearTimeout","toLocaleTimeString","some","openSiteTime","timeSpendSplit","target","value","rel","modal","buttonChange","type","onChange","onChangeInput","placeholder","React","timer","App","path","detailTaskPage","store","configureStore","middleware","thunk","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b3fd928f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nclass Recharts extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { data } = this.state;\r\n    this.changeData(data);\r\n    this.convertData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props !== prevProps) {\r\n      const { data } = this.state;\r\n      this.changeData(data);\r\n      this.convertData();\r\n    }\r\n  }\r\n\r\n  changeData = (data) => {\r\n    for (let i = 0; i < 24; i++) {\r\n      data[i] = { id: i, min: 0 };\r\n    }\r\n    this.setState(() => ({\r\n      data,\r\n    }));\r\n  };\r\n\r\n  convertTimeInMinutes = (h, m, s) => {\r\n    return parseInt(h * 60) + parseInt(m);\r\n  };\r\n\r\n  convertData = () => {\r\n    let { data } = this.state;\r\n    let { tasks } = this.props;\r\n    let tasksFilters = tasks.filter(item => item.statusTask !== 'progress');\r\n    let tasksFilter = cloneDeep(tasksFilters);\r\n\r\n    for (let i = 0; i < tasksFilter.length; i++) {\r\n      if (tasksFilter[i].timeStart === undefined) {\r\n        tasksFilter[i].timeStart = '00:00:00';\r\n      }\r\n\r\n      let dataTimeSplit = tasksFilter[i].timeStart.split(':');\r\n\r\n      let idDataStartTime = parseInt(dataTimeSplit[0]);\r\n\r\n\r\n      const timeSpendOnTask = tasks[i].timeSpend.split(':');\r\n      let timeSpendOnMinutes = this.convertTimeInMinutes(...timeSpendOnTask);\r\n\r\n      while (timeSpendOnMinutes > 0) {\r\n        let amountForFullMinutes = 60 - data[idDataStartTime].min;\r\n        data[idDataStartTime].min = data[idDataStartTime].min + timeSpendOnMinutes;\r\n\r\n        if (data[idDataStartTime].min > 60) {\r\n          data[idDataStartTime].min = 60;\r\n          idDataStartTime++;\r\n          timeSpendOnMinutes = timeSpendOnMinutes - amountForFullMinutes;\r\n        } else {\r\n          timeSpendOnMinutes = 0;\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        data,\r\n      }));\r\n      tasksFilter[i].timeStart = undefined;\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    let newData = cloneDeep(data);\r\n\r\n    return (\r\n      <div style={{ maxWidth: '100%', height: 300, padding: '0 20px 0 0' }}>\r\n        <ResponsiveContainer>\r\n          <BarChart\r\n            data={newData}\r\n            margin={{\r\n              top: 20, right: 0, left: 0, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=\"id\"/>\r\n            <YAxis/>\r\n            <Tooltip/>\r\n            <Legend/>\r\n            <Bar name=\"Minutes in this hours\" dataKey=\"min\" fill=\"#3248C7\"/>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { tasks } = state;\r\n  return { tasks };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Recharts);","import Rechars from './recharts';\r\nexport default Rechars;","import React from \"react\";\r\nimport Recharts from \"../components/recharts\";\r\n\r\nconst chartPage = () => {\r\n    return (\r\n        <Recharts/>\r\n    )\r\n}\r\n\r\nexport default chartPage;","import { createSlice } from '@reduxjs/toolkit';\r\nimport Service from '../service/service';\r\n\r\nconst service = new Service();\r\nconst getTasks = service.getTasks();\r\n\r\n\r\nlet idTask = 0;\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n      tasks: getTasks,\r\n      statusModal: false,\r\n      taskItem: {},\r\n    },\r\n    reducers: {\r\n      addItem: {\r\n        reducer: (state, action) => {\r\n          state.tasks = state.tasks.filter((item) => {\r\n            return item.statusTask !== 'progress';\r\n          });\r\n          state.tasks.push(action.payload);\r\n        },\r\n        prepare(info) {\r\n          return { payload: { id: idTask++, ...info } };\r\n        },\r\n      },\r\n\r\n      deleteItem: (state, action) => {\r\n        let ind = state.tasks.findIndex((item) => {\r\n          return item.taskName === action.payload;\r\n        });\r\n        if (ind > -1) {\r\n          state.tasks.splice(ind, 1);\r\n        }\r\n      },\r\n\r\n      showModal: (state, action) => {\r\n        state.statusModal = !state.statusModal;\r\n      },\r\n\r\n      generateTasks: (state, action) => {\r\n        state.tasks = action.payload;\r\n      },\r\n\r\n      getTask: (state, action) => {\r\n        const filterTask = state.tasks.filter((item) => {\r\n          return item.taskName === action.payload;\r\n        });\r\n        state.taskItem = filterTask[0];\r\n      },\r\n    },\r\n  },\r\n);\r\n\r\n\r\nfunction deleteItemThunk(payload) {\r\n  return (dispatch) => {\r\n    service.deleteItem(payload);\r\n    dispatch(deleteItem(payload));\r\n  };\r\n}\r\n\r\nfunction generateTaskThunk(payload) {\r\n  return (dispatch) => {\r\n    service.generateTask(payload);\r\n    dispatch(generateTasks(payload));\r\n  };\r\n}\r\n\r\nfunction addItemThunk(payload) {\r\n  return (dispatch) => {\r\n    service.addItem(payload);\r\n    dispatch(addItem(payload));\r\n  };\r\n}\r\n\r\nfunction addProgressTaskThunk(payload) {\r\n  return (dispatch) => {\r\n    service.addProgressTask(payload);\r\n    dispatch(addItem(payload));\r\n  };\r\n}\r\n\r\n\r\nconst { addItem, deleteItem, showModal, generateTasks, getTask } = tasksSlice.actions;\r\n\r\nconst actions = {\r\n  addItem,\r\n  deleteItem,\r\n  showModal,\r\n  generateTasks,\r\n  getTask,\r\n  deleteItemThunk,\r\n  generateTaskThunk,\r\n  addProgressTaskThunk,\r\n  addItemThunk,\r\n};\r\n\r\nexport {\r\n  actions,\r\n};\r\n\r\nexport default tasksSlice.reducer;","export default class Service {\r\n  tasks = [];\r\n  id = 0;\r\n  getTasks = () => {\r\n    this.tasks = [...JSON.parse(localStorage.getItem('tasks'))];\r\n    this.tasks = this.tasks === [] ? [] : this.tasks;\r\n    return this.tasks;\r\n  };\r\n  addItem = (payload) => {\r\n    this.tasks = this.tasks.filter((item) => {\r\n      return item.statusTask !== 'progress';\r\n    });\r\n    this.tasks.push({ id: ++this.id, ...payload });\r\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n  };\r\n  deleteItem = (payload) => {\r\n    this.tasks = this.tasks.filter(item => {\r\n      return item.taskName !== payload;\r\n    });\r\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n  };\r\n  addProgressTask = (payload) => {\r\n    this.tasks = [...this.tasks, payload];\r\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n  };\r\n  generateTask = (payload) => {\r\n    this.tasks = payload;\r\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n  };\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../reducers/reducer';\r\nimport { bindActionCreators } from 'redux';\r\nimport './generate-task.css';\r\n\r\n\r\nfunction createRandomNmbr(min, max) {\r\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n  return Math.round(rand);\r\n}\r\n\r\nfunction convertorTime(minutes) {\r\n  let h = minutes / 60 ^ 0;\r\n  let m = minutes > 59 ? minutes - 60 : minutes;\r\n  if (h < 10) h = '0' + h;\r\n  if (m < 10) m = '0' + m;\r\n  return `${h}:${m}:00`;\r\n}\r\n\r\n\r\nfunction createTask(action) {\r\n  let countNumber = createRandomNmbr(10, 15);\r\n  let tasks = [];\r\n  for (let i = 1; i <= countNumber; i++) {\r\n    tasks.push({\r\n      id: `${i}task${i}`,\r\n      taskName: `Task ${i}`,\r\n      timeSpend: convertorTime(createRandomNmbr(30, 90)),\r\n    });\r\n  }\r\n  action(tasks);\r\n  return tasks;\r\n}\r\n\r\n\r\nconst GenerateTasks = ({ generateTaskThunk }) => {\r\n  return (\r\n    <button className=\"generate-btn\" onClick={() => createTask(generateTaskThunk)}>Generate</button>\r\n  );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { generateTasks, generateTaskThunk } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    generateTasks,\r\n    generateTaskThunk,\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(GenerateTasks);\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actions } from '../../reducers/reducer';\r\nimport GenerateTasks from '../generate-tasks/generate-tasks';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: '100%',\r\n  },\r\n  tbody: {\r\n    background: '#EAF6FF',\r\n  },\r\n  topCell: {\r\n    color: '#9699A7',\r\n  },\r\n  td: {\r\n    color: '#4962D0',\r\n  },\r\n  button: {\r\n    background: '#fff',\r\n    color: '#4962D0',\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n\r\n    },\r\n  },\r\n});\r\n\r\nconst MyTables = ({ tasks, deteleItemThunks, getTask }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TableContainer align=\"center\">\r\n        <Table className={classes.table} aria-label=\"caption table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.topCell}>№</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Task</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Time start</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Time end</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Time Spend</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Info</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Delete</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody className={classes.tbody}>\r\n            {tasks.filter((item => item.statusTask !== 'progress'))\r\n              .map((item, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell className={classes.td} align=\"left\">{i + 1}</TableCell>\r\n                  <TableCell className={classes.td} component=\"th\" scope=\"row\">\r\n                    {item.taskName}\r\n                  </TableCell>\r\n                  <TableCell className={classes.td} align=\"left\">{item.timeStart}</TableCell>\r\n                  <TableCell className={classes.td} align=\"left\">{item.timeEnd}</TableCell>\r\n                  <TableCell className={classes.td} align=\"left\">{item.timeSpend}</TableCell>\r\n                  <TableCell className={classes.td} align=\"left\">\r\n                    <Link to={`/tasks/${item.taskId}`}>\r\n                      <Button className={classes.button} variant=\"contained\"\r\n                              onClick={() => getTask(item.taskName)}> info </Button>\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell className={classes.td} align=\"left\">\r\n                    <Button className={classes.button}\r\n                            variant=\"contained\"\r\n                            onClick={() => deteleItemThunks(item.taskName)}> delete </Button></TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <GenerateTasks/>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const { tasks } = state;\r\n  return { tasks };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { addItem, getTask } = bindActionCreators(actions, dispatch);\r\n  const { deleteItemThunk } = actions;\r\n  return {\r\n    addItem,\r\n    deteleItemThunks: (payload) => dispatch(deleteItemThunk(payload)),\r\n    getTask,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatchToProps)(MyTables);","import Table from './table';\r\nexport default Table;","import React from \"react\";\r\n\r\nimport Table from '../components/table'\r\n\r\nconst homePage = () => {\r\n    return (\r\n        <div><Table/></div>\r\n    )\r\n}\r\n\r\nexport default homePage;","import TaskDetails from './task-details';\r\nexport default TaskDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport './task-details.css';\r\n\r\nconst TaskDetails = ({ taskItem }) => {\r\n  const { taskName, timeStart, timeSpend, timeEnd } = taskItem;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task information</h2>\r\n      <div>Task name - {taskName}</div>\r\n      <div>Start time - {timeStart}</div>\r\n      <div>End time - {timeEnd}</div>\r\n      <div>Spend time - {timeSpend}</div>\r\n      <Link className=\"back-home-link\" to='/'>Back home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n  const { taskItem } = state;\r\n  return { taskItem };\r\n};\r\n\r\nexport default connect(mapDispatchToProps)(TaskDetails);","import React from \"react\";\r\n\r\nimport TaskDetails from \"../components/task-details\";\r\n\r\nconst TaskDetailPage = () => {\r\n    return (\r\n        <div><TaskDetails/></div>\r\n    )\r\n}\r\n\r\nexport default TaskDetailPage;","import MyTabs from './tabs';\r\nexport default MyTabs;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './tabs.css';\r\n\r\nconst MyTabs = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"top-links\">\r\n        <li className=\"top-links__li\">\r\n          <NavLink exact to=\"/\" className=\"top-links__link\" activeClassName=\"active\">Tasks log</NavLink>\r\n        </li>\r\n        <li className=\"top-links__li\">\r\n          <NavLink to=\"/chart-page\" className=\"top-links__link\" activeClassName=\"active\">Tasks chart</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTabs;","import Modal from './modal';\r\nexport default Modal;","import React from \"react\";\r\n\r\nimport './modal.css';\r\n\r\nconst Modal = ({showModal}) =>{\r\n    return (\r\n        <div className='wrap-modal'>\r\n            <div className=\" modal\">\r\n                <div className=\"modal__header\">Empy Task name</div>\r\n                <div className=\"modal__text\">You are trying close your task name , enter the title and try again</div>\r\n                <div className=\"wrap-modal-btn\">\r\n                    <button className='modal-btn' onClick={showModal}>Close</button>\r\n                </div>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './timer.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { actions } from '../../reducers/reducer';\r\n\r\nimport Modal from '../modal';\r\n\r\nclass Timer extends React.Component {\r\n\r\n  timerId = null;\r\n  timeStart = null;\r\n  state = {\r\n    flag: false,\r\n    hidden: true,\r\n    sec: '00',\r\n    min: '00',\r\n    h: '00',\r\n    taskText: '',\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { tasks } = this.props;\r\n    let result = tasks.some(item => item.statusTask === 'progress');\r\n    if (result) {\r\n      let openSiteTime = new Date();\r\n      let taskProgress = tasks.filter(item => item.statusTask === 'progress');\r\n      const { timeStart } = taskProgress[0];\r\n      let timeSpend = this.timeSpend(new Date(timeStart), openSiteTime);\r\n      let timeSpendSplit = timeSpend.split(':');\r\n      this.setState(() => ({\r\n        h: timeSpendSplit[0],\r\n        min: timeSpendSplit[1],\r\n        sec: timeSpendSplit[2],\r\n        hidden: false,\r\n        flag: true,\r\n      }));\r\n      this.timeStart = new Date(timeStart);\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { flag } = this.state;\r\n    if (flag) {\r\n      this.setState(() => ({\r\n        flag: false,\r\n      }));\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  useStyles = () => makeStyles({\r\n      timerBtn: {\r\n        background: '#fff',\r\n        textTransform: 'uppercase',\r\n      },\r\n    },\r\n  );\r\n\r\n  changeShowBtn = () => {\r\n    const { hidden } = this.state;\r\n    this.setState({ hidden: !hidden });\r\n  };\r\n\r\n  onTimerWrap = () => {\r\n    const { addProgressTaskThunk } = this.props;\r\n    let { taskId } = this.state;\r\n    this.timeStart = new Date();\r\n    const payload = {\r\n      taskId: taskId, timeStart: this.timeStart.toString(), statusTask: 'progress',\r\n    };\r\n\r\n    addProgressTaskThunk(payload);\r\n    this.setState(() => ({\r\n      taskId: taskId + 1,\r\n    }));\r\n    this.startTimer();\r\n\r\n  };\r\n\r\n  startTimer = () => {\r\n    let { sec, min, h } = this.state;\r\n    this.timerId = setInterval(() => {\r\n      sec = parseInt(sec) + 1;\r\n      min = parseInt(min);\r\n      h = parseInt(h);\r\n\r\n      if (sec === 60) {\r\n        sec = 0;\r\n        min++;\r\n      }\r\n      sec = sec < 10 ? '0' + sec : sec;\r\n\r\n      if (min === 60) {\r\n        min = 0;\r\n        h++;\r\n      }\r\n      min = min < 10 ? '0' + min : min;\r\n      h = h < 10 ? '0' + h : h;\r\n      this.setState(() => ({\r\n        sec,\r\n        min,\r\n        h,\r\n      }));\r\n\r\n    }, 1000);\r\n  };\r\n\r\n  timeSpend = (timeStart, timeEnd) => {\r\n    let seconds = (timeEnd - timeStart) / 1000 ^ 0;\r\n    let h = seconds / 3600 ^ 0;\r\n    let m = (seconds - h * 3600) / 60 ^ 0;\r\n    let s = (seconds - h * 3600) % 60;\r\n    if (h < 10) h = '0' + h;\r\n    if (m < 10) m = '0' + m;\r\n    if (s < 10) s = '0' + s;\r\n    return (`${h}:${m}:${s}`);\r\n  };\r\n\r\n  stopTimer = (event) => {\r\n    const { taskText } = this.state;\r\n    const { addItemThunk, showModal } = this.props;\r\n\r\n    if (taskText.length === 0) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      showModal();\r\n      return false;\r\n    }\r\n\r\n    clearTimeout(this.timerId);\r\n    let timeEnd = new Date();\r\n    //`${h}:${min}:${sec}`\r\n    const payload = {\r\n      // taskId: taskId,\r\n      taskName: taskText,\r\n      timeStart: this.timeStart.toLocaleTimeString(),\r\n      timeEnd: timeEnd.toLocaleTimeString(),\r\n      timeSpend: this.timeSpend(this.timeStart, timeEnd),\r\n    };\r\n    addItemThunk(payload);\r\n\r\n    this.setState(() => ({\r\n      min: '00',\r\n      sec: '00',\r\n      h: '00',\r\n      taskText: '',\r\n      flag: false,\r\n    }));\r\n\r\n  };\r\n\r\n  onChangeInput(event) {\r\n    this.setState({\r\n      taskText: event.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const classes = this.useStyles();\r\n    let { min, sec, h, hidden, taskText } = this.state;\r\n    let { statusModal, showModal, rel } = this.props;\r\n\r\n    const modal = statusModal ? <Modal showModal={showModal}/> : null;\r\n    const buttonChange = hidden ?\r\n      <Button className={classes.timerBtn} variant=\"contained\" onClick={this.onTimerWrap}> Start </Button> :\r\n      <Button className={classes.timerBtn} variant=\"contained\"\r\n              onClick={(event) => this.stopTimer(event)}> Stop </Button>;\r\n    return (\r\n      <div className='wrap-top-block'>\r\n        {modal}\r\n        <input type=\"text\" className=\"task-input-name\" value={taskText} onChange={(event) => {\r\n          this.onChangeInput(event);\r\n        }} placeholder=\"Name of your task\"/>\r\n\r\n        <div className=\"b-timer\" onClick={rel}>\r\n          <div className=\"time\">\r\n            <span className=\"time__items\">{h}:{min}:{sec}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <span onClick={this.changeShowBtn}>{buttonChange}</span>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { tasks, statusModal } = state;\r\n\r\n  return {\r\n    statusModal,\r\n    tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { addProgressTaskThunk, addItemThunk, showModal } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    addProgressTaskThunk,\r\n    addItemThunk,\r\n    showModal,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n\r\n","import timer from './timer';\r\nexport default timer;","import App from './app'\r\nexport default App;","import React from \"react\";\r\nimport {Route , Switch,Link} from 'react-router-dom';\r\nimport {homePage, chartPage, detailTaskPage} from '../../pages'\r\nimport MyTabs from '../tabs';\r\nimport Timer from '../timer';\r\n\r\n\r\n\r\nimport './app.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Timer/>\r\n            <MyTabs/>\r\n            <Switch>\r\n                <Route path=\"/\" component={homePage} exact/>\r\n                <Route path=\"/chart-page\" component={chartPage}/>\r\n                <Route path=\"/tasks/:id\" component={detailTaskPage}/>\r\n                <Route path=\"*\"> no match <br />\r\n                <Link to=\"/\">\r\n                    Back home\r\n                </Link>\r\n                </Route>\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksSlice from './reducers/reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = configureStore({\r\n  reducer: tasksSlice,\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={'timer-task'}>\n            <App/>\n        </Router>\n    </Provider>,\ndocument.getElementById('root'))\n"],"sourceRoot":""}