{"version":3,"sources":["components/recharts/recharts.js","components/recharts/index.js","pages/chartpage.js","store/modules/tasks/index.js","components/generate-tasks/generate-tasks.js","components/table/table.js","components/table/index.js","pages/homepage.js","components/task-details/index.js","components/task-details/task-details.js","pages/detailtaskpage.js","components/tabs/index.js","components/tabs/tabs.js","components/modal/index.js","components/modal/modal.js","components/timer/timer.js","components/timer/index.js","components/app/index.js","components/app/app.js","store/store.js","index.js"],"names":["Recharts","state","initialData","changeData","i","id","min","setState","convertTimeInMinutes","h","m","s","parseInt","convertData","data","props","length","dataTimeSplit","timeStart","split","idDataStartTime","timeSpendOnTask","timeSpend","timeSpendOnMinutes","amountForFullMinutes","this","prevProps","prevState","newData","cloneDeep","style","maxWidth","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","name","fill","Component","Rechars","connect","chartPage","idTask","addItemThunk","createAsyncThunk","payload","a","getState","dispatch","localStorage","setItem","JSON","stringify","removeItem","addItem","error","console","log","deleteItem","ind","findIndex","item","taskName","slice","saveTimeOnTimer","time","Date","toString","generateTasks","getTime","getItem","getTasks","_","result","parse","tasksSlice","createSlice","initialState","resumeTimer","statusModal","taskItem","reducers","reducer","action","push","prepare","info","showModal","getTask","filterTask","filter","extraReducers","fulfilled","resume","status","actions","createRandomNmbr","max","rand","Math","random","round","convertorTime","seconds","bindActionCreators","className","onClick","countNumber","tasks","setHours","timeEnd","getHours","getMinutes","getSeconds","toLocaleTimeString","createTask","useStyles","makeStyles","table","width","tbody","background","topCell","color","td","button","backgroundColor","Table","useEffect","classes","TableContainer","align","aria-label","TableHead","TableRow","TableCell","TableBody","map","key","component","scope","to","Button","variant","homePage","TaskDetails","TaskDetailPage","MyTabs","exact","activeClassName","Modal","Timer","startTime","timerId","taskText","flag","viewBtn","loading","timerBtn","textTransform","onTimerWrap","startTimer","isResumeTime","setInterval","stopTimer","event","stopPropagation","preventDefault","clearTimeout","timerResume","target","value","timeResult","modal","buttonChange","type","onChange","onChangeInput","placeholder","CircularProgress","React","timer","App","path","detailTaskPage","store","configureStore","middleware","thunk","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ad43ad0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nclass Recharts extends Component {\r\n\r\n  state = {\r\n    initialData: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { initialData } = this.state;\r\n    this.changeData(initialData);\r\n    this.convertData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props !== prevProps) {\r\n      const { initialData } = this.state;\r\n      this.changeData(initialData);\r\n      this.convertData();\r\n    }\r\n  }\r\n\r\n  changeData = (initialData) => {\r\n    for (let i = 0; i < 24; i++) {\r\n      initialData[i] = { id: i, min: 0 };\r\n    }\r\n    this.setState(() => ({\r\n      initialData,\r\n    }));\r\n  };\r\n\r\n  convertTimeInMinutes = (h, m, s) => {\r\n    return parseInt(h * 60) + parseInt(m);\r\n  };\r\n\r\n  convertData = () => {\r\n    let { initialData } = this.state;\r\n    let { data } = this.props;\r\n\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let dataTimeSplit = data[i].timeStart.split(':');\r\n      let idDataStartTime = parseInt(dataTimeSplit[0]);\r\n\r\n      const timeSpendOnTask = data[i].timeSpend.split(':');\r\n      let timeSpendOnMinutes = this.convertTimeInMinutes(...timeSpendOnTask);\r\n      let minutes = 60;\r\n\r\n      while (timeSpendOnMinutes > 0) {\r\n        let amountForFullMinutes = minutes - initialData[idDataStartTime].min;\r\n        initialData[idDataStartTime].min = initialData[idDataStartTime].min + timeSpendOnMinutes;\r\n\r\n        if (initialData[idDataStartTime].min > 60) {\r\n          initialData[idDataStartTime].min = 60;\r\n          idDataStartTime++;\r\n          timeSpendOnMinutes = timeSpendOnMinutes - amountForFullMinutes;\r\n        } else {\r\n          timeSpendOnMinutes = 0;\r\n        }\r\n      }\r\n      this.setState(() => ({\r\n        initialData,\r\n      }));\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    const { initialData } = this.state;\r\n    let newData = cloneDeep(initialData);\r\n    return (\r\n      <div style={{ maxWidth: '100%', height: 300, padding: '0 20px 0 0' }}>\r\n        <ResponsiveContainer>\r\n          <BarChart\r\n            data={newData}\r\n            margin={{\r\n              top: 20, right: 0, left: 0, bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=\"id\"/>\r\n            <YAxis/>\r\n            <Tooltip/>\r\n            <Legend/>\r\n            <Bar name=\"Minutes in this hours\" dataKey=\"min\" fill=\"#3248C7\"/>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { data } = state;\r\n  return { data };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Recharts);","import Rechars from './recharts';\r\nexport default Rechars;","import React from \"react\";\r\nimport Recharts from \"../components/recharts\";\r\n\r\nconst chartPage = () => {\r\n    return (\r\n        <Recharts/>\r\n    )\r\n}\r\n\r\nexport default chartPage;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nlet idTask = 0;\r\n\r\nconst addItemThunk = createAsyncThunk('tasks/addItem', async (payload, { getState, dispatch }) => {\r\n  try {\r\n    let data = getState().data;\r\n    data = [...data, payload];\r\n    localStorage.setItem('tasks', JSON.stringify(data));\r\n    localStorage.removeItem('resumeTimer');\r\n    dispatch(addItem(payload));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\n\r\nconst deleteItem = createAsyncThunk('tasks/deleteItem', async (payload, { getState, dispatch }) => {\r\n  try {\r\n    let data = getState().data;\r\n    let ind = data.findIndex((item) => {\r\n      return item.taskName === payload;\r\n    });\r\n    if (ind > -1) {\r\n      data = [...data.slice(0, ind), ...data.slice(++ind)];\r\n    }\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nconst saveTimeOnTimer = createAsyncThunk('users/resumeTimer', async (payload, { getState, dispatch }) => {\r\n  const time = new Date().toString();\r\n  localStorage.setItem('resumeTimer', JSON.stringify(time));\r\n});\r\n\r\nconst generateTasks = createAsyncThunk('users/generateTasks', async (payload, { getState, dispatch }) => {\r\n  localStorage.setItem('data', JSON.stringify(payload));\r\n  return payload;\r\n});\r\n\r\n\r\nconst getTime = createAsyncThunk('users/getTime', async () => {\r\n  return localStorage.getItem('resumeTimer');\r\n});\r\n\r\n\r\nconst getTasks = createAsyncThunk('tasks/getTasks',\r\n  async (_, { dispatch }) => {\r\n    try {\r\n      let result = JSON.parse(localStorage.getItem('data'))\r\n      return result === null ? [] : result;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  },\r\n);\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n      resumeTimer: {\r\n      },\r\n      data: [],\r\n      statusModal: false,\r\n      taskItem: {},\r\n    },\r\n    reducers: {\r\n      addItem: {\r\n        reducer: (state, action) => {\r\n          state.data.push(action.payload);\r\n\r\n        },\r\n        prepare(info) {\r\n          return { payload: { id: idTask++, ...info } };\r\n        },\r\n      },\r\n\r\n      showModal: (state, action) => {\r\n        state.statusModal = !state.statusModal;\r\n      },\r\n\r\n      getTask: (state, action) => {\r\n        const filterTask = state.data.filter((item) => {\r\n          return item.taskName === action.payload;\r\n        });\r\n        state.taskItem = filterTask[0];\r\n      },\r\n    },\r\n    extraReducers: {\r\n      [getTasks.fulfilled]: (state, action) => {\r\n        state.data = action.payload;\r\n      },\r\n      [getTime.fulfilled]: (state, action) => {\r\n        state.resumeTimer = {\r\n          time : action.payload,\r\n          resume: action.payload !== null,\r\n          status: true,\r\n        };\r\n      },\r\n\r\n      [deleteItem.fulfilled]: (state,action)=>{\r\n        state.data = action.payload;\r\n      },\r\n      [generateTasks.fulfilled]: (state,action)=>{\r\n        console.log('work');\r\n        state.data = action.payload;\r\n      },\r\n    },\r\n  },\r\n);\r\n\r\nconst {addItem,  showModal , getTask } = tasksSlice.actions;\r\n\r\nexport const actions = {\r\n  showModal,\r\n  getTask,\r\n  deleteItem,\r\n  getTasks,\r\n  addItemThunk,\r\n  generateTasks,\r\n  saveTimeOnTimer,\r\n  getTime,\r\n};\r\n\r\n\r\nexport default tasksSlice.reducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../store/modules/tasks/index';\r\nimport { bindActionCreators } from 'redux';\r\nimport './generate-task.css';\r\n\r\n\r\nfunction createRandomNmbr(min, max) {\r\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n  return Math.round(rand);\r\n}\r\n\r\nfunction convertorTime(time) {\r\n  let seconds = Math.round(time / 1000);\r\n  let h = seconds / 3600 ^ 0;\r\n  let m = (seconds - h * 3600) / 60 ^ 0;\r\n  let s = (seconds - h * 3600) % 60;\r\n  if (h < 10) h = '0' + h;\r\n  if (m < 10) m = '0' + m;\r\n  if (s < 10) s = '0' + s;\r\n  return `${h}:${m}:${s}`;\r\n}\r\n\r\n\r\nfunction createTask(action) {\r\n  let countNumber = createRandomNmbr(10, 15);\r\n  let tasks = [];\r\n  let timeStart = new Date();\r\n  timeStart.setHours(createRandomNmbr(6, 9), [0], [0]);\r\n\r\n  for (let i = 1; i <= countNumber; i++) {\r\n    let timeEnd = new Date();\r\n    timeEnd.setHours(timeStart.getHours(), [timeStart.getMinutes() + createRandomNmbr(10, 90)], [timeStart.getSeconds()]);\r\n    tasks.push({\r\n      id: `${i}task${i}`,\r\n      timeStart: timeStart.toLocaleTimeString(),\r\n      taskName: `Task ${i}`,\r\n      timeEnd: timeEnd.toLocaleTimeString(),\r\n      timeSpend: convertorTime(timeEnd - timeStart),\r\n    });\r\n    timeStart.setHours(timeEnd.getHours(), [timeEnd.getMinutes() + createRandomNmbr(5, 10)], [timeEnd.getSeconds()]);\r\n  }\r\n  action(tasks);\r\n  return tasks;\r\n}\r\n\r\nconst GenerateTasks = ({ generateTasks }) => {\r\n  return (\r\n    <button className=\"generate-btn\" onClick={() => createTask(generateTasks)}>Generate</button>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { generateTasks } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    generateTasks,\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(GenerateTasks);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actions } from '../../store/modules/tasks/index';\r\nimport GenerateTasks from '../generate-tasks/generate-tasks';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: '100%',\r\n  },\r\n  tbody: {\r\n    background: '#EAF6FF',\r\n  },\r\n  topCell: {\r\n    color: '#9699A7',\r\n  },\r\n  td: {\r\n    color: '#4962D0',\r\n  },\r\n  button: {\r\n    background: '#fff',\r\n    color: '#4962D0',\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n\r\n    },\r\n  },\r\n});\r\n\r\nconst MyTables = ({ data, deleteItem, getTask, getTasks }) => {\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <TableContainer align=\"center\">\r\n        <Table className={classes.table} aria-label=\"caption table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.topCell}>№</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Task</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Time start</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Time end</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Time Spend</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Info</TableCell>\r\n              <TableCell className={classes.topCell} align=\"left\">Delete</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody className={classes.tbody}>\r\n            {data.map((item, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell className={classes.td} align=\"left\">{i + 1}</TableCell>\r\n                <TableCell className={classes.td} component=\"th\" scope=\"row\">\r\n                  {item.taskName}\r\n                </TableCell>\r\n                <TableCell className={classes.td} align=\"left\">{item.timeStart}</TableCell>\r\n                <TableCell className={classes.td} align=\"left\">{item.timeEnd}</TableCell>\r\n                <TableCell className={classes.td} align=\"left\">{item.timeSpend}</TableCell>\r\n                <TableCell className={classes.td} align=\"left\">\r\n                  <Link to={`/tasks/${item.id}`}>\r\n                    <Button className={classes.button} variant=\"contained\"\r\n                            onClick={() => getTask(item.taskName)}> info </Button>\r\n                  </Link>\r\n                </TableCell>\r\n                <TableCell className={classes.td} align=\"left\">\r\n                  <Button className={classes.button}\r\n                          variant=\"contained\"\r\n                          onClick={() => deleteItem(item.taskName)}> delete </Button></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <GenerateTasks/>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const { data } = state;\r\n  return { data };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { addItem, getTask, getTasks, deleteItem } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    addItem,\r\n    deleteItem,\r\n    getTask,\r\n    getTasks,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatchToProps)(MyTables);","import Table from './table';\r\nexport default Table;","import React from \"react\";\r\n\r\nimport Table from '../components/table'\r\n\r\nconst homePage = () => {\r\n    return (\r\n        <div><Table/></div>\r\n    )\r\n}\r\n\r\nexport default homePage;","import TaskDetails from './task-details';\r\nexport default TaskDetails;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport './task-details.css';\r\n\r\nconst TaskDetails = ({ taskItem }) => {\r\n  const { taskName, timeStart, timeSpend, timeEnd } = taskItem;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task information</h2>\r\n      <div>Task name - {taskName}</div>\r\n      <div>Start time - {timeStart}</div>\r\n      <div>End time - {timeEnd}</div>\r\n      <div>Spend time - {timeSpend}</div>\r\n      <Link className=\"back-home-link\" to='/'>Back home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n  const { taskItem } = state;\r\n  return { taskItem };\r\n};\r\n\r\nexport default connect(mapDispatchToProps)(TaskDetails);","import React from \"react\";\r\n\r\nimport TaskDetails from \"../components/task-details\";\r\n\r\nconst TaskDetailPage = () => {\r\n    return (\r\n        <div><TaskDetails/></div>\r\n    )\r\n}\r\n\r\nexport default TaskDetailPage;","import MyTabs from './tabs';\r\nexport default MyTabs;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './tabs.css';\r\n\r\nconst MyTabs = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"top-links\">\r\n        <li className=\"top-links__li\">\r\n          <NavLink exact to=\"/\" className=\"top-links__link\" activeClassName=\"active\">Tasks log</NavLink>\r\n        </li>\r\n        <li className=\"top-links__li\">\r\n          <NavLink to=\"/chart-page\" className=\"top-links__link\" activeClassName=\"active\">Tasks chart</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTabs;","import Modal from './modal';\r\nexport default Modal;","import React from \"react\";\r\n\r\nimport './modal.css';\r\n\r\nconst Modal = ({showModal}) =>{\r\n    return (\r\n        <div className='wrap-modal'>\r\n            <div className=\" modal\">\r\n                <div className=\"modal__header\">Empy Task name</div>\r\n                <div className=\"modal__text\">You are trying close your task name , enter the title and try again</div>\r\n                <div className=\"wrap-modal-btn\">\r\n                    <button className='modal-btn' onClick={showModal}>Close</button>\r\n                </div>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './timer.css';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actions } from '../../store/modules/tasks/index';\r\nimport Modal from '../modal';\r\n\r\nclass Timer extends React.Component {\r\n  startTime = null;\r\n  timerId = null;\r\n  state = {\r\n    taskText: '',\r\n    flag: false,\r\n    viewBtn: true,\r\n    time: 0,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { getTime } = this.props;\r\n    getTime();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { resumeTimer } = this.props;\r\n    if (this.state.flag === false && resumeTimer.resume === true && resumeTimer.status === true) {\r\n      this.setState(() => ({\r\n        flag: true,\r\n      }));\r\n      this.startTimer(true);\r\n    }\r\n\r\n    if (this.state.flag === false && resumeTimer.resume === false && resumeTimer.status === true) {\r\n      this.setState(() => ({\r\n        flag: true,\r\n        loading: false,\r\n      }));\r\n\r\n    }\r\n  }\r\n\r\n  useStyles = () => makeStyles({\r\n      timerBtn: {\r\n        background: '#fff',\r\n        textTransform: 'uppercase',\r\n      },\r\n    },\r\n  );\r\n\r\n  onTimerWrap = () => {\r\n    const { saveTimeOnTimer } = this.props;\r\n    saveTimeOnTimer();\r\n    this.startTimer();\r\n  };\r\n\r\n  convertorTime(time) {\r\n    let seconds = Math.round(time / 1000);\r\n    let h = seconds / 3600 ^ 0;\r\n    let m = (seconds - h * 3600) / 60 ^ 0;\r\n    let s = (seconds - h * 3600) % 60;\r\n    if (h < 10) h = '0' + h;\r\n    if (m < 10) m = '0' + m;\r\n    if (s < 10) s = '0' + s;\r\n    return `${h}:${m}:${s}`;\r\n  }\r\n\r\n  startTimer = (isResumeTime) => {\r\n    const { resumeTimer } = this.props;\r\n    this.startTime = isResumeTime ? new Date(resumeTimer.time) : new Date();\r\n    this.timerId = setInterval(() => {\r\n      this.setState((state) => ({\r\n        time: new Date() - this.startTime,\r\n        loading: false,\r\n      }));\r\n    }, 1000);\r\n    this.setState(() => ({\r\n      viewBtn: false,\r\n\r\n    }));\r\n  };\r\n\r\n  stopTimer = (event) => {\r\n    const { addItemThunk, showModal } = this.props;\r\n    const { taskText } = this.state;\r\n    if (taskText.length === 0) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      showModal();\r\n      return false;\r\n    }\r\n\r\n    clearTimeout(this.timerId);\r\n    this.setState(() => ({\r\n      time: 0,\r\n      viewBtn: true,\r\n      taskText: '',\r\n      timerResume: false,\r\n    }));\r\n    let timeEnd = new Date();\r\n\r\n    const payload = {\r\n      taskName: taskText,\r\n      timeStart: this.startTime.toLocaleTimeString(),\r\n      timeEnd: timeEnd.toLocaleTimeString(),\r\n      timeSpend: this.convertorTime(timeEnd - this.startTime),\r\n    };\r\n    addItemThunk(payload);\r\n\r\n  };\r\n\r\n  onChangeInput(event) {\r\n    this.setState({\r\n      taskText: event.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const classes = this.useStyles();\r\n    let { viewBtn, taskText, time, loading } = this.state;\r\n    let { statusModal, showModal } = this.props;\r\n\r\n    let timeResult = this.convertorTime(time);\r\n    const modal = statusModal ? <Modal showModal={showModal}/> : null;\r\n    const buttonChange = viewBtn ?\r\n      <Button className={classes.timerBtn} variant=\"contained\" onClick={this.onTimerWrap}> Start </Button> :\r\n      <Button className={classes.timerBtn} variant=\"contained\"\r\n              onClick={(event) => this.stopTimer(event)}> Stop </Button>;\r\n    return (\r\n      <div className='wrap-top-block'>\r\n        {modal}\r\n        <input type=\"text\" className=\"task-input-name\" value={taskText} onChange={(event) => {\r\n          this.onChangeInput(event);\r\n        }} placeholder=\"Name of your task\"/>\r\n\r\n        <div className=\"b-timer\">\r\n          <div className=\"time\">\r\n            {\r\n              loading ? <CircularProgress/> : <span className=\"time__items\">{timeResult} </span>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <span>{buttonChange}</span>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { statusModal, resumeTimer } = state;\r\n  return {\r\n    statusModal,\r\n    resumeTimer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const { saveTimeOnTimer, addItemThunk, showModal, getTime } = bindActionCreators(actions, dispatch);\r\n  return {\r\n    saveTimeOnTimer,\r\n    addItemThunk,\r\n    showModal,\r\n    getTime,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n\r\n","import timer from './timer';\r\nexport default timer;","import App from './app'\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport { homePage, chartPage, detailTaskPage } from '../../pages';\r\nimport MyTabs from '../tabs';\r\nimport Timer from '../timer';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Timer/>\r\n      <MyTabs/>\r\n      <Switch>\r\n        <Route path=\"/\" component={homePage} exact/>\r\n        <Route path=\"/chart-page\" component={chartPage}/>\r\n        <Route path=\"/tasks/:id\" component={detailTaskPage}/>\r\n        <Route path=\"*\"> <br/> Page is undefined <br/>\r\n          <Link to=\"/\" className=\"back-home-link\">\r\n            Back home\r\n          </Link>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksSlice from '../store/modules/tasks/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = configureStore({\r\n  reducer: tasksSlice,\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={'timer-task'}>\n      <App/>\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}