{"version":3,"sources":["components/recharts/recharts.js","components/recharts/index.js","pages/chartpage.js","actions/actions.js","components/table/table.js","components/table/index.js","pages/homepage.js","components/task-details/index.js","components/task-details/task-details.js","pages/detailtaskpage.js","components/tabs/index.js","components/tabs/tabs.js","components/modal/index.js","components/modal/modal.js","components/timer/timer.js","components/timer/index.js","components/generate-tasks/generate-tasks.js","components/app/index.js","components/app/app.js","reducers/reducer.js","store.js","index.js"],"names":["Recharts","state","data","convertTimeInMinutes","h","m","s","parseInt","convertData","tasks","props","tasksFilter","filter","item","statusTask","i","length","undefined","timeStart","dataTimeSplit","split","idDataStartTime","timeSpendOnTask","timeSpend","timeSpendOnMinutes","amountForFullMinutes","min","setState","this","changeData","prevProps","prevState","id","newData","cloneDeep","style","maxWidth","height","padding","margin","top","right","left","bottom","strokeDasharray","dataKey","name","fill","Component","Rechars","connect","chartPage","deleteItem","payload","type","addItem","showModal","getTask","generateTasks","addProgressTask","useStyles","makeStyles","table","width","tbody","background","topCell","color","td","button","backgroundColor","Table","dispatch","bindActionCreators","actions","classes","TableContainer","align","className","aria-label","TableHead","TableRow","TableCell","TableBody","map","key","component","scope","taskName","timeEnd","to","taskId","Button","variant","onClick","homePage","TaskDetails","taskItem","TaskDetailPage","MyTabs","exact","activeClassName","Modal","Timer","timerId","flag","hidden","sec","taskText","timerBtn","textTransform","changeShowBtn","onTimerWrap","Date","startTimer","setInterval","seconds","stopTimer","event","stopPropagation","preventDefault","clearTimeout","toLocaleTimeString","some","openSiteTime","timeSpendSplit","target","value","statusModal","modal","buttonChange","onChange","onChangeInput","placeholder","React","timer","createRandomNmbr","max","rand","Math","random","round","convertorTime","minutes","action","countNumber","push","createTask","App","path","detailTaskPage","getTasks","JSON","parse","localStorage","getItem","initialState","reducer","setItem","stringify","filterTask","itemName","ind","findIndex","slice","indProgressTask","store","createStore","ReactDOM","render","basename","document","getElementById"],"mappings":"8qBAQMA,E,2MAEFC,MAAM,CACFC,KAAM,I,EAyBVC,qBAAuB,SAACC,EAAGC,EAAGC,GAC1B,OAAOC,SAAa,GAAJH,GAAUG,SAASF,I,EAGvCG,YAAc,WAKV,IALiB,IACXN,EAAQ,EAAKD,MAAbC,KACDO,EAAS,EAAKC,MAAdD,MACFE,EAAcF,EAAMG,QAAQ,SAAAC,GAAI,MAAyB,aAApBA,EAAKC,cAEpCC,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IAAK,CAAC,IAAD,OACTE,IAA7BN,EAAYI,GAAGG,YACdP,EAAYI,GAAGG,UAAY,YAW/B,IARA,IAAIC,EAAgBR,EAAYI,GAAGG,UAAUE,MAAM,KAE/CC,EAAkBd,SAASY,EAAc,IAGvCG,EAAkBb,EAAMM,GAAGQ,UAAUH,MAAM,KAC7CI,GAAqB,KAAKrB,qBAAL,oBAA6BmB,IAE/CE,EAAqB,GAAE,CAC1B,IAAIC,EAAuB,GAAKvB,EAAKmB,GAAiBK,IACtDxB,EAAKmB,GAAiBK,IAAMxB,EAAKmB,GAAiBK,IAAMF,EAEnDtB,EAAKmB,GAAiBK,IAAM,IAC7BxB,EAAKmB,GAAiBK,IAAM,GAC5BL,IACAG,GAA0CC,GAG1CD,EAAqB,EAG7B,EAAKG,UAAS,iBAAM,CAChBzB,WAEJS,EAAYI,GAAGG,eAAYD,I,mFA5Dd,IACVf,EAAQ0B,KAAK3B,MAAbC,KACP0B,KAAKC,WAAW3B,GAChB0B,KAAKpB,gB,yCAEUsB,EAAWC,GAC1B,GAAGH,KAAKlB,QAAUoB,EAAU,CAAC,IAClB5B,EAAQ0B,KAAK3B,MAAbC,KACP0B,KAAKC,WAAW3B,GAChB0B,KAAKpB,iB,iCAIDN,GACR,IAAK,IAAIa,EAAI,EAAGA,EAAI,GAAIA,IACpBb,EAAKa,GAAK,CAACiB,GAAIjB,EAAGW,IAAK,GAE3BE,KAAKD,UAAS,iBAAK,CACfzB,a,+BA8CE,IACCA,EAAQ0B,KAAK3B,MAAbC,KACF+B,EAAWC,IAAUhC,GAE1B,OACI,yBAAKiC,MAAO,CAACC,SAAU,OAAQC,OAAO,IAAMC,QAAQ,eACpD,kBAAC,IAAD,KACA,kBAAC,IAAD,CACIpC,KAAM+B,EACNM,OAAQ,CACJC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,IAGxC,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,OACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,KAAK,wBAAwBD,QAAQ,MAAME,KAAK,mB,GAxF9CC,aCPRC,ED4GAC,aALS,SAAC,GACrB,MAAO,CAACzC,MADwB,EAAVA,SAKXyC,CAAyBlD,GEpGzBmD,EANG,WACd,OACI,kBAAC,EAAD,O,gFCJFC,EAAa,SAAEC,GACjB,MAAM,CACFC,KAAM,cACND,YAIFE,EAAU,SAACF,GACb,MAAO,CACHC,KAAK,WACND,YAKDG,EAAY,WACd,MAAM,CACFF,KAAM,eAIRG,EAAU,SAAEJ,GACd,MAAO,CACHC,KAAM,WACND,YAIFK,EAAgB,SAACL,GACnB,MAAM,CACFC,KAAK,iBACLD,YAIFM,EAAkB,SAACN,GACrB,MAAO,CACHC,KAAK,oBACLD,YCtBFO,EAAYC,YAAW,CACzBC,MAAO,CACHC,MAAO,QAEXC,MAAO,CACHC,WAAY,WAEhBC,QAAS,CACLC,MAAO,WAEXC,GAAI,CACAD,MAAO,WAEXE,OAAQ,CACJJ,WAAY,OACZE,MAAO,UACP,UAAW,CACPG,gBAAiB,WCjCdC,EDkGArB,aAZU,SAAC,GACtB,MAAO,CAACzC,MAD0B,EAAXA,UAIA,SAAC+D,GAAc,IAAD,EACPC,YAAmBC,EAASF,GAC1D,MAAO,CACHpB,WAHiC,EAC9BA,WAGHK,QAJiC,EAClBA,WAORP,EA3DE,SAAC,GAAkC,IAAjCzC,EAAgC,EAAhCA,MAAO2C,EAAyB,EAAzBA,WAAYK,EAAa,EAAbA,QAC5BkB,EAAUf,IAEhB,OACI,kBAACgB,EAAA,EAAD,CAAgBC,MAAM,UAClB,kBAACN,EAAA,EAAD,CAAOO,UAAWH,EAAQb,MAAOiB,aAAW,iBACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,SAA9B,UACA,kBAACgB,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,QAASW,MAAM,QAA7C,QACA,kBAACK,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,QAASW,MAAM,QAA7C,cACA,kBAACK,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,QAASW,MAAM,QAA7C,YACA,kBAACK,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,QAASW,MAAM,QAA7C,cACA,kBAACK,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,QAASW,MAAM,QAA7C,QACA,kBAACK,EAAA,EAAD,CAAWJ,UAAWH,EAAQT,QAASW,MAAM,QAA7C,YAGR,kBAACM,EAAA,EAAD,CAAWL,UAAWH,EAAQX,OACzBvD,EAAMG,QAAQ,SAAAC,GAAI,MAA0B,aAArBA,EAAKC,cACxBsE,KAAI,SAACvE,EAAME,GAAP,OACL,kBAACkE,EAAA,EAAD,CAAUI,IAAKtE,GACX,kBAACmE,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIS,MAAM,QAAQ9D,EAAI,GACpD,kBAACmE,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIkB,UAAU,KAAKC,MAAM,OAClD1E,EAAK2E,UAEV,kBAACN,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIS,MAAM,QAAQhE,EAAKK,WACrD,kBAACgE,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIS,MAAM,QAAQhE,EAAK4E,SACrD,kBAACP,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIS,MAAM,QAAQhE,EAAKU,WACrD,kBAAC2D,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIS,MAAM,QACpC,kBAAC,IAAD,CAAOa,GAAE,iBAAY7E,EAAK8E,SACtB,kBAACC,EAAA,EAAD,CAASd,UAAWH,EAAQN,OAAQwB,QAAQ,YACpCC,QAAS,kBAAMrC,EAAQ5C,EAAK2E,YADpC,YAIR,kBAACN,EAAA,EAAD,CAAWJ,UAAWH,EAAQP,GAAIS,MAAM,QACpC,kBAACe,EAAA,EAAD,CAAQd,UAAWH,EAAQN,OACnBwB,QAAQ,YACRC,QAAS,kBAAM1C,EAAWvC,EAAK2E,YAFvC,uBEjEjBO,EANE,WACb,OACI,6BAAK,kBAAC,EAAD,QCLEC,ECwBA9C,aALY,SAACjD,GAExB,MAAO,CAACgG,SADWhG,EAAZgG,YAII/C,EApBK,SAAC,GAAgB,IAAf+C,EAAc,EAAdA,SACXT,EAA2CS,EAA3CT,SAAUtE,EAAiC+E,EAAjC/E,UAAWK,EAAsB0E,EAAtB1E,UAAWkE,EAAWQ,EAAXR,QAEvC,OACI,6BACI,oEACA,0FAAmBD,GACnB,sGAAqBtE,GACrB,wHAAwBuE,GACxB,2GAAqBlE,GACrB,kBAAC,IAAD,CAAMmE,GAAG,KAAT,iBCLGQ,EANQ,WACnB,OACI,6BAAK,kBAAC,EAAD,QCLEC,G,OCGA,WAEX,OACI,6BACI,wBAAIrB,UAAU,aACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAASsB,OAAK,EAACV,GAAG,IAAIZ,UAAU,kBAAkBuB,gBAAgB,UAAlE,cAEJ,wBAAIvB,UAAU,iBACV,kBAAC,IAAD,CAASY,GAAG,cAAcZ,UAAU,kBAAkBuB,gBAAgB,UAAtE,oBCZLC,G,cCGD,SAAC,GAAgB,IAAf9C,EAAc,EAAdA,UACZ,OACI,yBAAKsB,UAAU,cACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,iBAAf,kBACA,yBAAKA,UAAU,eAAf,uEACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,YAAYgB,QAAStC,GAAvC,cCCd+C,E,2MAEFC,QAAU,K,EACVtF,UAAY,K,EACZjB,MAAQ,CACJwG,MAAM,EACNC,QAAQ,EACRC,IAAK,KACLjF,IAAK,KACLtB,EAAG,KACHwG,SAAU,GACVjB,OAAQ,G,EAkCZ/B,UAAY,kBAAMC,YAAW,CACrBgD,SAAU,CACN5C,WAAY,OACZ6C,cAAe,gB,EAK3BC,cAAgB,WAAO,IACZL,EAAU,EAAKzG,MAAfyG,OACP,EAAK/E,SAAS,CAAC+E,QAASA,K,EAG5BM,YAAc,WAAO,IACVrD,EAAmB,EAAKjD,MAAxBiD,gBADS,EAEkB,EAAK1D,MAArB0F,GAFF,EAEXgB,IAFW,EAENjF,IAFM,EAEDtB,EAFC,EAEEuF,QAFF,EAEUc,KAC1B,EAAKvF,UAAY,IAAI+F,KAKrBtD,EAJgB,CACZgC,OAAQA,EAAQzE,UAAW,EAAKA,UAAWJ,WAAY,aAI3D,EAAKa,UAAS,iBAAO,CACjBgE,OAAQA,EAAS,MAErB,EAAKuB,c,EAITA,WAAa,WAAO,IAAD,EACmB,EAAKjH,MAAlC0G,EADU,EACVA,IAAKjF,EADK,EACLA,IAAKtB,EADA,EACAA,EADA,EACGuF,OADH,EACWc,KAC1B,EAAKD,QAAUW,aAAY,WACvBR,EAAMpG,SAASoG,GAAO,EACtBjF,EAAMnB,SAASmB,GACftB,EAAIG,SAASH,GAED,KAARuG,IACAA,EAAM,EACNjF,KAEJiF,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EAEjB,KAARjF,IACAA,EAAM,EACNtB,KAEJsB,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EAC7BtB,EAAIA,EAAI,GAAK,IAAMA,EAAIA,EACvB,EAAKuB,UAAS,iBAAO,CACjBgF,MACAjF,MACAtB,UAGL,M,EAGPmB,UAAY,SAACL,EAAWuE,GAEpB,IAAI2B,GAAW3B,EAAUvE,GAAa,IAAO,EACzCd,EAAIgH,EAAU,KAAO,EACrB/G,GAAK+G,EAAc,KAAJhH,GAAY,GAAK,EAChCE,GAAK8G,EAAc,KAAJhH,GAAY,GAI/B,OAHIA,EAAI,KAAIA,EAAI,IAAMA,GAClBC,EAAI,KAAIA,EAAI,IAAMA,GAClBC,EAAI,KAAIA,EAAI,IAAMA,GAChB,GAAN,OAAWF,EAAX,aAAiBC,EAAjB,aAAuBC,I,EAG3B+G,UAAY,SAACC,GAAW,IAAD,EACqB,EAAKrH,MAAzB2G,GADD,EACZD,IADY,EACPjF,IADO,EACFtB,EADE,EACCwG,UAAUjB,EADX,EACWA,OADX,EAEU,EAAKjF,MAA3B6C,EAFY,EAEZA,QAASC,EAFG,EAEHA,UAEhB,GAAwB,IAApBoD,EAAS5F,OAIT,OAHAsG,EAAMC,kBACND,EAAME,iBACNhE,KACO,EAEXiE,aAAa,EAAKjB,SAClB,IAAIf,EAAU,IAAIwB,KASlB1D,EAPgB,CACZoC,OAAQA,EACRH,SAAUoB,EACV1F,UAAW,EAAKA,UAAUwG,qBAC1BjC,QAASA,EAAQiC,qBACjBnG,UAAW,EAAKA,UAAU,EAAKL,UAAWuE,KAI9C,EAAK9D,UAAS,iBAAO,CACjBD,IAAK,KACLiF,IAAK,KACLvG,EAAG,KACHwG,SAAU,GACVjB,OAAQA,EAAS,EACjBc,MAAM,O,mFAhIO,IACVhG,EAASmB,KAAKlB,MAAdD,MAEP,GADaA,EAAMkH,MAAK,SAAA9G,GAAI,MAAwB,aAApBA,EAAKC,cACzB,CACR,IAAI8G,EAAe,IAAIX,KAEhB/F,EADYT,EAAMG,QAAO,SAAAC,GAAI,MAAwB,aAApBA,EAAKC,cACZ,GAA1BI,UAEH2G,EADYjG,KAAKL,UAAU,IAAI0F,KAAK/F,GAAY0G,GACrBxG,MAAM,KACrCQ,KAAKD,UAAS,iBAAO,CACjBvB,EAAGyH,EAAe,GAClBnG,IAAKmG,EAAe,GACpBlB,IAAKkB,EAAe,GACpBnB,QAAQ,EACRD,MAAM,MAEV7E,KAAKV,UAAY,IAAI+F,KAAK/F,M,2CAMfU,KAAK3B,MAAbwG,OAEH7E,KAAKD,UAAS,iBAAO,CACjB8E,MAAM,MAEV7E,KAAKsF,gB,oCA0GCI,GACV1F,KAAKD,SAAS,CACViF,SAAUU,EAAMQ,OAAOC,U,+BAIrB,IAAD,OACCpD,EAAU/C,KAAKgC,YADhB,EAEiChC,KAAK3B,MAAtCyB,EAFA,EAEAA,IAAKiF,EAFL,EAEKA,IAAKvG,EAFV,EAEUA,EAAGsG,EAFb,EAEaA,OAAQE,EAFrB,EAEqBA,SAFrB,EAG0BhF,KAAKlB,MAA/BsH,EAHA,EAGAA,YAAaxE,EAHb,EAGaA,UAEZyE,EAAQD,EAAc,kBAAC,EAAD,CAAOxE,UAAWA,IAAe,KACvD0E,EAAexB,EACjB,kBAACd,EAAA,EAAD,CAAQd,UAAWH,EAAQkC,SAAUhB,QAAQ,YAAYC,QAASlE,KAAKoF,aAAvE,WACA,kBAACpB,EAAA,EAAD,CAAQd,UAAWH,EAAQkC,SAAUhB,QAAQ,YACrCC,QAAS,SAACwB,GAAD,OAAW,EAAKD,UAAUC,KAD3C,UAEJ,OACI,yBAAKxC,UAAU,kBACVmD,EACD,2BAAO3E,KAAK,OAAOwB,UAAU,kBAAkBiD,MAAOnB,EAAUuB,SAAU,SAACb,GACvE,EAAKc,cAAcd,IACpBe,YAAY,sBAEf,yBAAKvD,UAAU,WACX,yBAAKA,UAAU,QACX,0BAAMA,UAAU,eAAe1E,EAA/B,MAAqCsB,EAArC,MAA6CiF,KAIrD,0BAAMb,QAASlE,KAAKmF,eAAgBmB,Q,GAhLhCI,IAAMtF,WCXXuF,EDmNArF,aAjBS,SAAC,GACrB,MAAO,CACH8E,YAF0C,EAAxBA,YAGlBvH,MAH0C,EAAXA,UAOZ,SAAC+D,GAAc,IAAD,EACSC,YAAmBC,EAASF,GAC1E,MAAO,CACHjB,QAHiC,EAC9BA,QAGHC,UAJiC,EACrBA,UAIZG,gBALiC,EACVA,mBAShBT,CAA6CqD,GE9M5D,SAASiC,EAAiB9G,EAAK+G,GAC3B,IAAIC,EAAOhH,EAAM,GAAMiH,KAAKC,UAAYH,EAAM/G,EAAM,GACpD,OAAOiH,KAAKE,MAAMH,GAGtB,SAASI,EAAcC,GACnB,IAAI3I,EAAI2I,EAAU,GAAK,EACnB1I,EAAI0I,EAAU,GAAKA,EAAU,GAAKA,EAGtC,OAFG3I,EAAI,KAAKA,EAAI,IAAMA,GACnBC,EAAI,KAAKA,EAAI,IAAMA,GAChB,GAAN,OAAUD,EAAV,YAAeC,EAAf,OAmBJ,IAce6C,eARS,WACpB,MAAO,MAEgB,SAACsB,GAExB,MAAO,CAACd,cADee,YAAmBC,EAAQF,GAA5Cd,iBAIKR,EAdO,SAAC,GAAqB,IAApBQ,EAAmB,EAAnBA,cACpB,OACI,4BAAQoC,QAAS,kBAjBzB,SAAoBkD,GAGhB,IAFA,IAAIC,EAAcT,EAAiB,GAAG,IAClC/H,EAAQ,GACJM,EAAI,EAAGA,GAAIkI,EAAclI,IAC7BN,EAAMyI,KAAK,CACPvD,OAAS5E,EACTyE,SAAS,QAAD,OAAUzE,GAClBQ,UAAYuH,EAAcN,EAAiB,GAAG,OAItD,OADAQ,EAAOvI,GACAA,EAMoB0I,CAAWzF,KAAlC,eCpCO0F,G,OCWH,WACR,OACI,yBAAKtE,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuE,KAAK,IAAI/D,UAAWS,EAAUK,OAAK,IAC1C,kBAAC,IAAD,CAAOiD,KAAK,cAAc/D,UAAWnC,IACrC,kBAAC,IAAD,CAAOkG,KAAK,aAAa/D,UAAWgE,IACpC,kBAAC,IAAD,CAAOD,KAAK,KAAZ,aAA0B,6BAC1B,kBAAC,IAAD,CAAM3D,GAAG,KAAT,eAKJ,kBAAC,EAAD,S,QC3BN6D,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,UAE3CC,EAAe,CACjBnJ,MAAoB,OAAb8I,EAAoB,GAAKA,EAChCvB,aAAa,EACb/B,SAAU,IAuDC4D,GApDC,WAAmC,IAAlC5J,EAAiC,uDAAzB2J,EAAcZ,EAAW,uCACzCvI,EAAgCR,EAAhCQ,MAAOuH,EAAyB/H,EAAzB+H,YAAa/B,EAAYhG,EAAZgG,SAEzB,OAAQ+C,EAAO1F,MAEX,IAAK,iBAGD,OAFAoG,aAAaI,QAAQ,QAASN,KAAKO,UAAUf,EAAO3F,UACpD5C,EAAQuI,EAAO3F,QACR,eAAIpD,EAAX,CAAkBQ,UAEtB,IAAK,WACD,IAAMuJ,EAAavJ,EAAMG,QAAO,SAACC,GAC7B,OAAOA,EAAK2E,WAAawD,EAAO3F,WAKpC,OAFA4C,EAAW+D,EAAW,GAEf,eAAI/J,EAAX,CAAkBgG,aAGtB,IAAK,cACD,IAAMgE,EAAWjB,EAAO3F,QAClB6G,EAAMzJ,EAAM0J,WAAU,SAACtJ,GACzB,OAAOA,EAAK2E,WAAayE,KAK7B,OAFAxJ,EAAK,sBAAOA,EAAM2J,MAAM,EAAGF,IAAtB,YAA+BzJ,EAAM2J,MAAMF,EAAM,KACtDR,aAAaI,QAAQ,QAASN,KAAKO,UAAUtJ,IACtC,eAAIR,EAAX,CAAkBQ,UAEtB,IAAK,WACD,IAAI4J,EAAkB5J,EAAM0J,WAAU,SAAAtJ,GAAI,MAAwB,aAApBA,EAAKC,cAGnD,OAFAL,EAAK,sBAAOA,EAAM2J,MAAM,EAAGC,IAAtB,YAA2C5J,EAAM2J,MAAMC,EAAkB,IAAzE,CAA6ErB,EAAO3F,UACzFqG,aAAaI,QAAQ,QAASN,KAAKO,UAAUtJ,IACtC,eAAIR,EAAX,CAAkBQ,UAEtB,IAAK,oBAID,OAFAA,EAAK,sBAAOA,GAAP,CAAcuI,EAAO3F,UAC1BqG,aAAaI,QAAQ,QAASN,KAAKO,UAAUtJ,IACtC,eAAIR,EAAX,CAAkBQ,UAEtB,IAAK,aAED,OADAuH,GAAeA,EACR,eAAI/H,EAAX,CAAkB+H,gBAEtB,QACI,OAAO/H,ICjDHqK,GAFDC,YAAYV,ICM3BW,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,IAAD,CAAQI,SAAU,cACd,kBAAC,EAAD,QAGZC,SAASC,eAAe,W","file":"static/js/main.548fe12d.chunk.js","sourcesContent":["import React, {Component,PureComponent} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nclass Recharts extends Component {\r\n\r\n    state={\r\n        data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {data} = this.state;\r\n        this.changeData(data);\r\n        this.convertData();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props !== prevProps){\r\n            const {data} = this.state;\r\n            this.changeData(data);\r\n            this.convertData();\r\n        }\r\n    }\r\n\r\n    changeData (data) {\r\n        for (let i = 0; i < 24; i++) {\r\n            data[i] = {id: i, min: 0,}\r\n        }\r\n        this.setState(()=>({\r\n            data\r\n        }))\r\n    }\r\n\r\n    convertTimeInMinutes = (h, m, s) => {\r\n        return parseInt(h * 60) + parseInt(m);\r\n    }\r\n\r\n    convertData = () => {\r\n        let { data} = this.state;\r\n        let {tasks} = this.props;\r\n       let tasksFilter = tasks.filter( item =>  item.statusTask !== 'progress');\r\n\r\n        for (let i = 0; i < tasksFilter.length; i++) {\r\n            if(tasksFilter[i].timeStart === undefined){\r\n                tasksFilter[i].timeStart = '00:00:00';\r\n            }\r\n\r\n            let dataTimeSplit = tasksFilter[i].timeStart.split(':');\r\n\r\n            let idDataStartTime = parseInt(dataTimeSplit[0]);\r\n\r\n\r\n            const timeSpendOnTask = tasks[i].timeSpend.split(':');\r\n            let timeSpendOnMinutes = this.convertTimeInMinutes(...timeSpendOnTask);\r\n\r\n            while( timeSpendOnMinutes > 0){\r\n                let amountForFullMinutes = 60 - data[idDataStartTime].min;\r\n                data[idDataStartTime].min = data[idDataStartTime].min + timeSpendOnMinutes;\r\n\r\n                if ( data[idDataStartTime].min > 60) {\r\n                    data[idDataStartTime].min = 60;\r\n                    idDataStartTime++;\r\n                    timeSpendOnMinutes = timeSpendOnMinutes - amountForFullMinutes;\r\n                }\r\n                else {\r\n                    timeSpendOnMinutes = 0;\r\n                }\r\n            }\r\n            this.setState(() =>({\r\n                data,\r\n            }))\r\n            tasksFilter[i].timeStart = undefined;\r\n        }\r\n\r\n    };\r\n    render() {\r\n        const {data} = this.state;\r\n        let  newData  = cloneDeep(data);\r\n\r\n        return(\r\n            <div style={{maxWidth: '100%', height:300 , padding:'0 20px 0 0'}}>\r\n            <ResponsiveContainer>\r\n            <BarChart\r\n                data={newData}\r\n                margin={{\r\n                    top: 20, right: 0, left: 0, bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"id\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar name=\"Minutes in this hours\" dataKey=\"min\" fill=\"#3248C7\" />\r\n            </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({tasks}) =>{\r\n    return {tasks}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Recharts);","import Rechars from './recharts';\r\nexport default Rechars;","import React from \"react\";\r\nimport Recharts from \"../components/recharts\";\r\n\r\nconst chartPage = () => {\r\n    return (\r\n        <Recharts/>\r\n    )\r\n}\r\n\r\nexport default chartPage;","\r\nconst deleteItem = ( payload ) =>{\r\n    return{\r\n        type: 'DELETE_TASK',\r\n        payload\r\n    }\r\n};\r\n\r\nconst addItem = (payload) =>{\r\n    return {\r\n        type:\"ADD_TASK\",\r\n       payload,\r\n\r\n    }\r\n};\r\n\r\nconst showModal = () =>{\r\n    return{\r\n        type: \"SHOW_MODAL\",\r\n    }\r\n};\r\n\r\nconst getTask = ( payload) => {\r\n    return {\r\n        type: \"GET_TASK\",\r\n        payload,\r\n    }\r\n};\r\n\r\nconst generateTasks = (payload) =>{\r\n    return{\r\n        type:'GENERATE_TASKS',\r\n        payload\r\n    }\r\n}\r\n\r\nconst addProgressTask = (payload) =>{\r\n    return {\r\n        type:'ADD_PROGRESS_TASK',\r\n        payload\r\n    }\r\n}\r\n\r\nexport {\r\n    deleteItem,\r\n    addItem,\r\n    showModal,\r\n    getTask,\r\n    generateTasks,\r\n    addProgressTask\r\n};","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as actions from '../../actions/actions';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: '100%',\r\n    },\r\n    tbody: {\r\n        background: '#EAF6FF',\r\n    },\r\n    topCell: {\r\n        color: '#9699A7',\r\n    },\r\n    td: {\r\n        color: '#4962D0',\r\n    },\r\n    button: {\r\n        background: '#fff',\r\n        color: '#4962D0',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n\r\n        },\r\n    }\r\n});\r\n\r\nconst MyTables = ({tasks, deleteItem, getTask}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer align=\"center\">\r\n            <Table className={classes.table} aria-label=\"caption table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.topCell}>№</TableCell>\r\n                        <TableCell className={classes.topCell} align=\"left\">Task</TableCell>\r\n                        <TableCell className={classes.topCell} align=\"left\">Time start</TableCell>\r\n                        <TableCell className={classes.topCell} align=\"left\">Time end</TableCell>\r\n                        <TableCell className={classes.topCell} align=\"left\">Time Spend</TableCell>\r\n                        <TableCell className={classes.topCell} align=\"left\">Info</TableCell>\r\n                        <TableCell className={classes.topCell} align=\"left\">Delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tbody}>\r\n                    {tasks.filter((item =>  item.statusTask !==  'progress' ))\r\n                        .map((item, i) => (\r\n                        <TableRow key={i}>\r\n                            <TableCell className={classes.td} align=\"left\">{i + 1}</TableCell>\r\n                            <TableCell className={classes.td} component=\"th\" scope=\"row\">\r\n                                {item.taskName}\r\n                            </TableCell>\r\n                            <TableCell className={classes.td} align=\"left\">{item.timeStart}</TableCell>\r\n                            <TableCell className={classes.td} align=\"left\">{item.timeEnd}</TableCell>\r\n                            <TableCell className={classes.td} align=\"left\">{item.timeSpend}</TableCell>\r\n                            <TableCell className={classes.td} align=\"left\">\r\n                                <Link  to={`/tasks/${item.taskId}`}>\r\n                                    <Button  className={classes.button} variant=\"contained\"\r\n                                            onClick={() => getTask(item.taskName)}> info </Button>\r\n                                </Link>\r\n                            </TableCell>\r\n                            <TableCell className={classes.td} align=\"left\">\r\n                                <Button className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        onClick={() => deleteItem(item.taskName)}> delete </Button></TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    );\r\n};\r\n\r\nconst mapsStateToProps = ({tasks}) => {\r\n    return {tasks};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    const {deleteItem, getTask} = bindActionCreators(actions, dispatch);\r\n    return {\r\n        deleteItem,\r\n        getTask,\r\n    }\r\n};\r\n\r\nexport default connect(mapsStateToProps, mapDispatchToProps)(MyTables);","import Table from './table';\r\nexport default Table;","import React from \"react\";\r\n\r\nimport Table from '../components/table'\r\n\r\nconst homePage = () => {\r\n    return (\r\n        <div><Table/></div>\r\n    )\r\n}\r\n\r\nexport default homePage;","import TaskDetails from './task-details';\r\nexport default TaskDetails;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nconst TaskDetails = ({taskItem}) => {\r\n    const {taskName, timeStart, timeSpend, timeEnd} = taskItem;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Задача</h2>\r\n            <div>имя задачи - {taskName}</div>\r\n            <div>время старта - {timeStart}</div>\r\n            <div>время окончания - {timeEnd}</div>\r\n            <div>длительность - {timeSpend}</div>\r\n            <Link to='/'>Back home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    const {taskItem} = state;\r\n    return {taskItem}\r\n}\r\n\r\nexport default connect(mapDispatchToProps)(TaskDetails);","import React from \"react\";\r\n\r\nimport TaskDetails from \"../components/task-details\";\r\n\r\nconst TaskDetailPage = () => {\r\n    return (\r\n        <div><TaskDetails/></div>\r\n    )\r\n}\r\n\r\nexport default TaskDetailPage;","import MyTabs from './tabs';\r\nexport default MyTabs;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './tabs.css';\r\n\r\nconst MyTabs = () => {\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"top-links\">\r\n                <li className=\"top-links__li\">\r\n                    <NavLink exact to=\"/\" className=\"top-links__link\" activeClassName=\"active\">Tasks log</NavLink>\r\n                </li>\r\n                <li className=\"top-links__li\">\r\n                    <NavLink to=\"/chart-page\" className=\"top-links__link\" activeClassName=\"active\">Tasks chart</NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTabs;","import Modal from './modal';\r\nexport default Modal;","import React from \"react\";\r\n\r\nimport './modal.css';\r\n\r\nconst Modal = ({showModal}) =>{\r\n    return (\r\n        <div className='wrap-modal'>\r\n            <div className=\" modal\">\r\n                <div className=\"modal__header\">Empy Task name</div>\r\n                <div className=\"modal__text\">You are trying close your task name , enter the title and try again</div>\r\n                <div className=\"wrap-modal-btn\">\r\n                    <button className='modal-btn' onClick={showModal}>Close</button>\r\n                </div>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './timer.css';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as actions from \"../../actions/actions\";\r\n\r\nimport Modal from '../modal';\r\n\r\nclass Timer extends React.Component {\r\n\r\n    timerId = null;\r\n    timeStart = null;\r\n    state = {\r\n        flag: false,\r\n        hidden: true,\r\n        sec: '00',\r\n        min: '00',\r\n        h: '00',\r\n        taskText: '',\r\n        taskId: 1,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {tasks} = this.props;\r\n        let result = tasks.some(item => item.statusTask === 'progress');\r\n        if (result) {\r\n            let openSiteTime = new Date();\r\n            let taskProgress = tasks.filter(item => item.statusTask === 'progress');\r\n            const {timeStart} = taskProgress[0];\r\n            let timeSpend = this.timeSpend(new Date(timeStart), openSiteTime);\r\n            let timeSpendSplit = timeSpend.split(':');\r\n            this.setState(() => ({\r\n                h: timeSpendSplit[0],\r\n                min: timeSpendSplit[1],\r\n                sec: timeSpendSplit[2],\r\n                hidden: false,\r\n                flag: true,\r\n            }));\r\n            this.timeStart = new Date(timeStart);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {flag} = this.state;\r\n        if (flag) {\r\n            this.setState(() => ({\r\n                flag: false,\r\n            }))\r\n            this.startTimer();\r\n        }\r\n    }\r\n\r\n    useStyles = () => makeStyles({\r\n            timerBtn: {\r\n                background: '#fff',\r\n                textTransform: 'uppercase',\r\n            },\r\n        }\r\n    );\r\n\r\n    changeShowBtn = () => {\r\n        const {hidden} = this.state;\r\n        this.setState({hidden: !hidden});\r\n    };\r\n\r\n    onTimerWrap = () => {\r\n        const {addProgressTask} = this.props;\r\n        let {sec, min, h, taskId, flag} = this.state;\r\n        this.timeStart = new Date();\r\n        const payload = {\r\n            taskId: taskId, timeStart: this.timeStart, statusTask: 'progress'\r\n        };\r\n\r\n        addProgressTask(payload);\r\n        this.setState(() => ({\r\n            taskId: taskId + 1,\r\n        }));\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer = () => {\r\n        let {sec, min, h, taskId, flag} = this.state;\r\n        this.timerId = setInterval(() => {\r\n            sec = parseInt(sec) + 1;\r\n            min = parseInt(min);\r\n            h = parseInt(h);\r\n\r\n            if (sec === 60) {\r\n                sec = 0;\r\n                min++;\r\n            }\r\n            sec = sec < 10 ? '0' + sec : sec;\r\n\r\n            if (min === 60) {\r\n                min = 0;\r\n                h++;\r\n            }\r\n            min = min < 10 ? '0' + min : min;\r\n            h = h < 10 ? '0' + h : h;\r\n            this.setState(() => ({\r\n                sec,\r\n                min,\r\n                h,\r\n            }))\r\n\r\n        }, 1000);\r\n    }\r\n\r\n    timeSpend = (timeStart, timeEnd) => {\r\n\r\n        let seconds = (timeEnd - timeStart) / 1000 ^ 0;\r\n        let h = seconds / 3600 ^ 0;\r\n        let m = (seconds - h * 3600) / 60 ^ 0;\r\n        let s = (seconds - h * 3600) % 60;\r\n        if (h < 10) h = \"0\" + h;\r\n        if (m < 10) m = \"0\" + m;\r\n        if (s < 10) s = \"0\" + s;\r\n        return (`${h}: ${m}: ${s}`);\r\n    }\r\n\r\n    stopTimer = (event) => {\r\n        const {sec, min, h, taskText, taskId} = this.state;\r\n        const {addItem, showModal} = this.props;\r\n\r\n        if (taskText.length === 0) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            showModal();\r\n            return false;\r\n        }\r\n        clearTimeout(this.timerId);\r\n        let timeEnd = new Date();\r\n        //`${h}:${min}:${sec}`\r\n        const payload = {\r\n            taskId: taskId,\r\n            taskName: taskText,\r\n            timeStart: this.timeStart.toLocaleTimeString(),\r\n            timeEnd: timeEnd.toLocaleTimeString(),\r\n            timeSpend: this.timeSpend(this.timeStart, timeEnd),\r\n        }\r\n        addItem(payload);\r\n\r\n        this.setState(() => ({\r\n            min: '00',\r\n            sec: '00',\r\n            h: '00',\r\n            taskText: '',\r\n            taskId: taskId + 1,\r\n            flag: false,\r\n        }))\r\n\r\n    };\r\n\r\n    onChangeInput(event) {\r\n        this.setState({\r\n            taskText: event.target.value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const classes = this.useStyles();\r\n        let {min, sec, h, hidden, taskText} = this.state;\r\n        let {statusModal, showModal} = this.props;\r\n\r\n        const modal = statusModal ? <Modal showModal={showModal}/> : null;\r\n        const buttonChange = hidden ?\r\n            <Button className={classes.timerBtn} variant=\"contained\" onClick={this.onTimerWrap}> Start </Button> :\r\n            <Button className={classes.timerBtn} variant=\"contained\"\r\n                    onClick={(event) => this.stopTimer(event)}> Stop </Button>;\r\n        return (\r\n            <div className='wrap-top-block'>\r\n                {modal}\r\n                <input type=\"text\" className=\"task-input-name\" value={taskText} onChange={(event) => {\r\n                    this.onChangeInput(event)\r\n                }} placeholder=\"Name of your task\"/>\r\n\r\n                <div className=\"b-timer\">\r\n                    <div className=\"time\">\r\n                        <span className=\"time__items\">{h} : {min} : {sec}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <span onClick={this.changeShowBtn}>{buttonChange}</span>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({statusModal, tasks}) => {\r\n    return {\r\n        statusModal,\r\n        tasks,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    const {addItem, showModal, addProgressTask} = bindActionCreators(actions, dispatch);\r\n    return {\r\n        addItem,\r\n        showModal,\r\n        addProgressTask,\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n\r\n","import timer from './timer';\r\nexport default timer;","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../actions/actions';\r\nimport {bindActionCreators} from 'redux'\r\n\r\n\r\nfunction createRandomNmbr(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n}\r\n\r\nfunction convertorTime(minutes) {\r\n    let h = minutes / 60 ^ 0;\r\n    let m = minutes > 59 ? minutes - 60 : minutes;\r\n    if(h < 10 ) h = '0' + h;\r\n    if(m < 10 ) m = '0' + m;\r\n    return `${h}:${m}:00`;\r\n}\r\n\r\n\r\nfunction createTask(action) {\r\n    let countNumber = createRandomNmbr(10,15);\r\n    let tasks = [];\r\n    for(let i = 1; i<= countNumber ; i++){\r\n        tasks.push({\r\n            taskId : i,\r\n            taskName: `Task ${i}`,\r\n            timeSpend : convertorTime(createRandomNmbr(30,90)),\r\n        })\r\n    }\r\n    action(tasks);\r\n    return tasks;\r\n}\r\n\r\n\r\nconst GenerateTasks = ({generateTasks}) => {\r\n    return(\r\n        <button onClick={() => createTask(generateTasks)}>Generate</button>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {}\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n   const {generateTasks} = bindActionCreators(actions,dispatch)\r\n    return {generateTasks };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GenerateTasks);\r\n\r\n","import App from './app'\r\nexport default App;","import React from \"react\";\r\nimport {Route,useRouterHistory , Switch,Link} from 'react-router-dom';\r\nimport {homePage, chartPage, detailTaskPage} from '../../pages'\r\nimport MyTabs from '../tabs';\r\nimport Timer from '../timer';\r\nimport GenerateTasks from \"../generate-tasks/generate-tasks\";\r\n\r\n\r\nimport './app.css';\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Timer/>\r\n            <MyTabs/>\r\n            <Switch>\r\n                <Route path=\"/\" component={homePage} exact/>\r\n                <Route path=\"/chart-page\" component={chartPage}/>\r\n                <Route path=\"/tasks/:id\" component={detailTaskPage}/>\r\n                <Route path=\"*\"> no match <br />\r\n                <Link to=\"/\">\r\n                    Back home\r\n                </Link>\r\n                </Route>\r\n            </Switch>\r\n            <GenerateTasks/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","const getTasks = JSON.parse(localStorage.getItem('tasks'));\r\n\r\nconst initialState = {\r\n    tasks: getTasks === null ? [] : getTasks,\r\n    statusModal: false,\r\n    taskItem: {},\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let {tasks, statusModal, taskItem} = state;\r\n\r\n    switch (action.type) {\r\n\r\n        case \"GENERATE_TASKS\":\r\n            localStorage.setItem('tasks', JSON.stringify(action.payload));\r\n            tasks = action.payload;\r\n            return {...state, tasks};\r\n\r\n        case \"GET_TASK\" :\r\n            const filterTask = tasks.filter((item) => {\r\n                return item.taskName === action.payload;\r\n            });\r\n\r\n            taskItem = filterTask[0];\r\n\r\n            return {...state, taskItem};\r\n\r\n\r\n        case \"DELETE_TASK\":\r\n            const itemName = action.payload;\r\n            const ind = tasks.findIndex((item) => {\r\n                return item.taskName === itemName;\r\n            });\r\n\r\n            tasks = [...tasks.slice(0, ind), ...tasks.slice(ind + 1)];\r\n            localStorage.setItem('tasks', JSON.stringify(tasks));\r\n            return {...state, tasks};\r\n\r\n        case \"ADD_TASK\":\r\n            let indProgressTask = tasks.findIndex(item => item.statusTask === 'progress');\r\n            tasks = [...tasks.slice(0, indProgressTask), ...tasks.slice(indProgressTask + 1), action.payload];\r\n            localStorage.setItem('tasks', JSON.stringify(tasks));\r\n            return {...state, tasks};\r\n\r\n        case \"ADD_PROGRESS_TASK\":\r\n\r\n            tasks = [...tasks, action.payload];\r\n            localStorage.setItem('tasks', JSON.stringify(tasks));\r\n            return {...state, tasks};\r\n\r\n        case \"SHOW_MODAL\":\r\n            statusModal = !statusModal;\r\n            return {...state, statusModal};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;","import {createStore} from \"redux\";\r\n\r\nimport reducer from \"./reducers/reducer\";\r\n\r\nconst store  = createStore(reducer);\r\n\r\nexport default  store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={'timer-task'}>\n            <App/>\n        </Router>\n    </Provider>,\ndocument.getElementById('root'))\n"],"sourceRoot":""}