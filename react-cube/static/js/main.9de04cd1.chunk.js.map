{"version":3,"sources":["components/Item.jsx","components/Row.jsx","components/AddButons.jsx","components/RemoveButtons.jsx","components/Cube.jsx","App.js","serviceWorker.js","index.js"],"names":["Item","size","className","style","height","width","Row","columns","result","j","push","key","renderItem","AddBtns","onAddRow","onAddColumn","onClick","RemoveBnt","props","onRemoveCol","onRemoveRow","top","left","showBtnDeleteCol","showBtnDeleteRow","onClearTimer","onMouseEnter","display","Cube","handleHiddenRemoveBtn","timer","setTimeout","setState","handleGiveCoordsForBtnRemove","event","target","offsetTop","parentElement","offsetLeft","classList","contains","removeRowBtnCoordsTop","removeColBtnCoordsLeft","handleRemoveRow","rows","handleRemoveCol","cols","handleAddColumn","handleAddRow","handleShowRemoveRow","handleClearTimer","clearTimeout","state","this","updateShape","Array","map","el","i","hiddenRemoveBtn","onMouseOver","onMouseLeave","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAQeA,EANF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACX,OACI,yBAAKC,UAAU,aAAaC,MAAO,CAACC,OAAQH,EAAOI,MAAOJ,MCcnDK,EAfH,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QAAUN,EAAU,EAAVA,KAQpB,OACI,oCACI,yBAAKC,UAAU,aAAf,IATW,SAAAK,GAEf,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAIF,EAASE,IACzBD,EAAOE,KAAK,kBAAC,EAAD,CAAMC,IAAKF,EAAGR,KAAMA,KAEpC,OAAOO,EAI0BI,CAAWL,MCFrCM,EATC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,YAAcd,EAAW,EAAXA,KACvC,OACI,oCACI,yBAAKe,QAASF,EAAUZ,UAAU,0BAA0BC,MAAO,CAACC,OAAQH,EAAMI,MAAOJ,IAAO,oCAChG,yBAAKe,QAASD,EAAab,UAAU,2BAA2BC,MAAO,CAACC,OAAQH,EAAMI,MAAOJ,IAAO,sCCMjGgB,EAVG,SAACC,GAAW,IACnBC,EAA6GD,EAA7GC,YAAeC,EAA8FF,EAA9FE,YADG,EAC2FF,EAAhFG,WADX,MACiB,EADjB,IAC2FH,EAAvEI,YADpB,MAC2B,EAD3B,EAC+BC,EAA4DL,EAA5DK,iBAAmBC,EAAyCN,EAAzCM,iBAAkBC,EAAuBP,EAAvBO,aAAcxB,EAASiB,EAATjB,KAC3G,OACI,oCACI,yBAAKe,QAASI,EAAaM,aAAcD,EAActB,MAAO,CAAEkB,MAAMM,QAASH,EAAmBA,EAAmB,OAAS,OAASpB,OAAOH,EAAMI,MAAOJ,GAAWC,UAAU,iCAAgC,oCAChN,yBAAKc,QAASG,EAAaO,aAAcD,EAActB,MAAO,CAAEmB,OAAOK,QAAUJ,EAAmBA,EAAmB,OAAS,OAASnB,OAAOH,EAAMI,MAAOJ,GAAUC,UAAU,kCAAiC,sCC4F/M0B,E,YA7FX,WAAYV,GAAQ,IAAD,uBACf,4CAAMA,KAaVW,sBAAwB,WACpB,EAAKC,MAAQC,YAAW,WACpB,EAAKC,SAAS,CAACT,kBAAkB,EAAOC,kBAAkB,MAC3D,MAjBY,EAoBnBS,6BAA+B,SAACC,GAAW,IAAD,EACWA,EAAMC,OAAhCC,EADe,EAC/BC,cAAgBD,UAAYE,EADG,EACHA,WAC/BJ,EAAMC,OAAOI,UAAUC,SAAS,eAChC,EAAKR,SAAS,CAACS,sBAAuBH,EAAYI,uBAAwBN,KAvB/D,EA2BnBO,gBAAkB,WACd,EAAKX,UAAS,gBAAEY,EAAF,EAAEA,KAAF,MAAa,CAACA,OAAMA,EAAO,IAAIA,EAAO,EAAUpB,kBAAkB,OA5BjE,EA+BnBqB,gBAAkB,WACd,EAAKb,UAAS,gBAAEc,EAAF,EAAEA,KAAF,MAAa,CAACA,OAAMA,EAAO,IAAIA,EAAO,EAAUvB,kBAAkB,OAhCjE,EAmCnBwB,gBAAkB,WACd,EAAKf,UAAS,kBAAa,CAACc,KAAd,EAAEA,KAAyB,OApC1B,EAuCnBE,aAAe,WACX,EAAKhB,UAAS,kBAAa,CAACY,KAAd,EAAEA,KAAyB,OAxC1B,EA2CnBK,oBAAsB,WAClB,EAAKjB,UAAS,kBAAa,CAACR,iBAAd,EAAEoB,KAAqC,MACrD,EAAKZ,UAAS,kBAAa,CAACT,iBAAd,EAAEuB,KAAqC,MAErD,EAAKI,oBA/CU,EAkDnBA,iBAAmB,WACfC,aAAa,EAAKrB,QAnDH,IAERc,EAAe1B,EAAf0B,KAAME,EAAS5B,EAAT4B,KAFE,OAGf,EAAKM,MAAQ,CACTR,OACAE,OACAL,sBAAuB,EACvBC,uBAAwB,EACxBlB,kBAAkB,EAClBD,kBAAkB,GAEtB,EAAKO,MAAQ,GAXE,E,sEAsDT,IAAD,SACmGuB,KAAKD,MAAtGN,EADF,EACEA,KAAMF,EADR,EACQA,KAAMH,EADd,EACcA,sBAAuBC,EADrC,EACqCA,uBAAwBlB,EAD7D,EAC6DA,iBAAkBD,EAD/E,EAC+EA,iBAC7EtB,EAASoD,KAAKnC,MAAdjB,KAEDqD,EADK,YAAOC,MAAMX,GAAMY,KAAI,SAACC,GAAD,OAAQA,MAChBD,KAAI,SAACC,EAAIC,GAAL,OAC1B,kBAAC,EAAD,CACInD,QAASuC,EACTnC,IAAK+C,EACLzD,KAAMA,EACN0D,gBAAiB,EAAK9B,2BAE9B,OAEI,yBAAK3B,UAAU,OACV0D,YAAaP,KAAKpB,6BAClBP,aAAc2B,KAAKJ,oBACnBY,aAAcR,KAAKxB,uBAEpB,kBAAC,EAAD,CACIJ,aAAc4B,KAAKH,iBACnB3B,iBAAkBA,EAClBC,iBAAkBA,EAClBL,YAAakC,KAAKR,gBAClBzB,YAAaiC,KAAKV,gBAClB1C,KAAMA,EACNqB,KAAMmB,EACNpB,IAAKqB,IAET,kBAAC,EAAD,CACIzC,KAAMA,EACNa,SAAUuC,KAAKL,aACfjC,YAAasC,KAAKN,kBAErBO,O,GAxFEQ,IAAMC,WCIVC,EANL,WACN,OACI,kBAAC,EAAD,CAAMpB,KAAM,EAAGE,KAAM,EAAG7C,KAAM,MCOlBgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.9de04cd1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Item = ({size}) => {\r\n    return (\r\n        <div className=\"cube__item\" style={{height: size , width: size} } ></div>\r\n    )\r\n}\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\nconst Row = ({columns , size}) => {\r\n    const renderItem = columns => {\r\n        const result = [];\r\n        for (let j = 0; j < columns; j++) {\r\n            result.push(<Item key={j} size={size}/>)\r\n        }\r\n        return result;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"cube__row\"> {renderItem(columns)}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\n\r\nconst AddBtns = ({ onAddRow, onAddColumn , size }) => {\r\n    return (\r\n        <>\r\n            <div onClick={onAddRow} className=\"cube__add cube__add-row\" style={{height: size, width: size}}><span>+</span></div>\r\n            <div onClick={onAddColumn} className=\"cube__add cube__add-item\" style={{height: size, width: size}}><span>+</span></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBtns;","import React from 'react';\r\n\r\nconst RemoveBnt = (props) => {\r\n    let  { onRemoveCol ,  onRemoveRow , top = 0, left = 0 , showBtnDeleteCol , showBtnDeleteRow ,onClearTimer ,size}  = props;\r\n    return (\r\n        <>\r\n            <div onClick={onRemoveRow} onMouseEnter={onClearTimer} style={{ top , display: showBtnDeleteRow = showBtnDeleteRow ? 'flex' : 'none' , height:size, width: size   }}  className=\"cube__remove cube__remove-row\"><span>-</span></div>\r\n            <div onClick={onRemoveCol} onMouseEnter={onClearTimer} style={{ left , display : showBtnDeleteCol = showBtnDeleteCol ? 'flex' : 'none' , height:size, width: size   }} className=\"cube__remove cube__remove-item\"><span>-</span></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RemoveBnt;","import React from 'react';\r\nimport Row from './Row';\r\nimport AddBtns from './AddButons';\r\nimport RemoveBtns from './RemoveButtons';\r\n\r\nclass Cube extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {rows, cols } = props;\r\n        this.state = {\r\n            rows,\r\n            cols,\r\n            removeRowBtnCoordsTop: 0,\r\n            removeColBtnCoordsLeft: 0,\r\n            showBtnDeleteRow: false,\r\n            showBtnDeleteCol: false\r\n        };\r\n        this.timer = '';\r\n    }\r\n\r\n    handleHiddenRemoveBtn = () => {\r\n        this.timer = setTimeout(() => {\r\n            this.setState({showBtnDeleteCol: false, showBtnDeleteRow: false})\r\n        }, 300);\r\n    }\r\n\r\n    handleGiveCoordsForBtnRemove = (event) => {\r\n        const {parentElement: {offsetTop}, offsetLeft} = event.target\r\n        if (event.target.classList.contains('cube__item')) {\r\n            this.setState({removeRowBtnCoordsTop: offsetLeft, removeColBtnCoordsLeft: offsetTop});\r\n        }\r\n    }\r\n\r\n    handleRemoveRow = () => {\r\n        this.setState(({rows}) => ({rows: rows > 1 ? rows - 1 : true, showBtnDeleteRow: false}))\r\n    }\r\n\r\n    handleRemoveCol = () => {\r\n        this.setState(({cols}) => ({cols: cols > 1 ? cols - 1 : true, showBtnDeleteCol: false}))\r\n    }\r\n\r\n    handleAddColumn = () => {\r\n        this.setState(({cols}) => ({cols: cols + 1}));\r\n    }\r\n\r\n    handleAddRow = () => {\r\n        this.setState(({rows}) => ({rows: rows + 1}));\r\n    }\r\n\r\n    handleShowRemoveRow = () => {\r\n        this.setState(({rows}) => ({showBtnDeleteRow: rows > 1  }))\r\n        this.setState(({cols}) => ({showBtnDeleteCol: cols > 1 }))\r\n\r\n        this.handleClearTimer();\r\n    }\r\n\r\n    handleClearTimer = () => {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render() {\r\n        const {cols, rows, removeRowBtnCoordsTop, removeColBtnCoordsLeft, showBtnDeleteRow, showBtnDeleteCol} = this.state;\r\n        const {size} =  this.props;\r\n        const shape = [...Array(rows).map((el) => el)];\r\n        const updateShape = shape.map((el, i) =>\r\n            <Row\r\n                columns={cols}\r\n                key={i}\r\n                size={size}\r\n                hiddenRemoveBtn={this.handleHiddenRemoveBtn}\r\n            />)\r\n        return (\r\n\r\n            <div className=\"cube\"\r\n                 onMouseOver={this.handleGiveCoordsForBtnRemove}\r\n                 onMouseEnter={this.handleShowRemoveRow}\r\n                 onMouseLeave={this.handleHiddenRemoveBtn}\r\n            >\r\n                <RemoveBtns\r\n                    onClearTimer={this.handleClearTimer}\r\n                    showBtnDeleteCol={showBtnDeleteCol}\r\n                    showBtnDeleteRow={showBtnDeleteRow}\r\n                    onRemoveCol={this.handleRemoveCol}\r\n                    onRemoveRow={this.handleRemoveRow}\r\n                    size={size}\r\n                    left={removeRowBtnCoordsTop}\r\n                    top={removeColBtnCoordsLeft}\r\n                />\r\n                <AddBtns\r\n                    size={size}\r\n                    onAddRow={this.handleAddRow}\r\n                    onAddColumn={this.handleAddColumn}\r\n                />\r\n                {updateShape}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cube;\r\n","import  React from 'react';\nimport Cube from './components/Cube';\n\nlet App = () => {\n    return (\n        <Cube rows={4} cols={4} size={50}/>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}